#include <iostream>
#include <limits>
#include <vector>

struct Vector2f {
  float x;
  float y;
};

float normalize_same_scale(float val, float min, float scale) {
  return (val - min) / scale;
}

int main() {
  const static std::vector<Vector2f> points = {


      {404, 62},
      {420.4354553222656, 89.62067031860352},
      {436.87086486816406, 117.24134063720703},
      {453.3063201904297, 144.86199951171875},
      {469.7417755126953, 172.48266983032227},
      {486.17718505859375, 200.10335159301758},
      {502.6126403808594, 227.7239990234375},
      {519.048095703125, 255.3446807861328},
      {535.4835052490234, 282.96533966064453},
      {551.9189605712891, 310.58604431152344},
      {568.3544158935547, 338.20670318603516},
      {584.7898254394531, 365.82738494873047},
      {601.2252807617188, 393.4480209350586},
      {617.6607360839844, 421.0687255859375},
      {595.3441619873047, 437.32794189453125},
      {566.5966033935547, 451.70167541503906},
      {537.8490905761719, 466.07545471191406},
      {509.10157775878906, 480.44923400878906},
      {480.35401916503906, 494.8229675292969},
      {451.60650634765625, 509.1967468261719},
      {422.85894775390625, 523.5705261230469},
      {394.1114807128906, 537.9442596435547},
      {365.3639221191406, 552.3180389404297},
      {336.6164321899414, 566.6917724609375},
      {307.8689193725586, 568.9344482421875},
      {279.121337890625, 554.5606689453125},
      {250.3738250732422, 540.1868896484375},
      {221.62631225585938, 525.8131561279297},
      {192.87882232666016, 511.4394226074219},
      {164.13124084472656, 497.0656433105469},
      {135.38372802734375, 482.6918640136719},
      {106.63623809814453, 468.31813049316406},
      {77.88872528076172, 453.94435119628906},
      {49.141143798828125, 439.57057189941406},
      {20.393630981445312, 425.19683837890625},
      {36.21038293838501, 397.7575454711914},
      {52.6458683013916, 370.1367950439453},
      {69.08129501342773, 342.5161590576172},
      {85.51672744750977, 314.89552307128906},
      {101.9521541595459, 287.27484130859375},
      {118.38758087158203, 259.6542053222656},
      {134.82301330566406, 232.0335693359375},
      {151.2584342956543, 204.41291046142578},
      {167.69386672973633, 176.79225158691406},
      {184.12939071655273, 149.17145538330078},
      {200.56482315063477, 121.55079650878906},
      {217.000244140625, 93.93018341064453},
      {233.43565368652344, 66.30952453613281},
      {260.2621612548828, 49.868913650512695},
      {289.0096740722656, 35.49516296386719},
      {317.7573471069336, 21.121329307556152},
      {346.5048370361328, 33.252421379089355},
      {375.2523498535156, 47.62617206573486},


  };

  float x_min = std::numeric_limits<float>::max();
  float y_min = std::numeric_limits<float>::max();
  float x_max = std::numeric_limits<float>::lowest();
  float y_max = std::numeric_limits<float>::lowest();

  for (const auto &point : points) {
    if (point.x < x_min)
      x_min = point.x;
    if (point.x > x_max)
      x_max = point.x;
    if (point.y < y_min)
      y_min = point.y;
    if (point.y > y_max)
      y_max = point.y;
  }

  const float x_range = x_max - x_min;
  const float y_range = y_max - y_min;
  const float min_range = std::min(x_range, y_range); // common scale

  for (const auto &point : points) {
    const float x_norm = normalize_same_scale(point.x, x_min, min_range);
    const float y_norm = normalize_same_scale(point.y, y_min, min_range);
    std::cout << "{" << x_norm << ", " << y_norm << "},\n";
  }
}
